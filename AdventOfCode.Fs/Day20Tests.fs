module AdventOfCode.Fs.Day20Tests

open Xunit
open FsUnit.Xunit
open Day20

let sampleInput = [
    "Tile 2311:";
    "..##.#..#.";
    "##..#.....";
    "#...##..#.";
    "####.#...#";
    "##.##.###.";
    "##...#.###";
    ".#.#.#..##";
    "..#....#..";
    "###...#.#.";
    "..###..###";
    "";
    "Tile 1951:";
    "#.##...##.";
    "#.####...#";
    ".....#..##";
    "#...######";
    ".##.#....#";
    ".###.#####";
    "###.##.##.";
    ".###....#.";
    "..#.#..#.#";
    "#...##.#..";
    "";
    "Tile 1171:";
    "####...##.";
    "#..##.#..#";
    "##.#..#.#.";
    ".###.####.";
    "..###.####";
    ".##....##.";
    ".#...####.";
    "#.##.####.";
    "####..#...";
    ".....##...";
    "";
    "Tile 1427:";
    "###.##.#..";
    ".#..#.##..";
    ".#.##.#..#";
    "#.#.#.##.#";
    "....#...##";
    "...##..##.";
    "...#.#####";
    ".#.####.#.";
    "..#..###.#";
    "..##.#..#.";
    "";
    "Tile 1489:";
    "##.#.#....";
    "..##...#..";
    ".##..##...";
    "..#...#...";
    "#####...#.";
    "#..#.#.#.#";
    "...#.#.#..";
    "##.#...##.";
    "..##.##.##";
    "###.##.#..";
    "";
    "Tile 2473:";
    "#....####.";
    "#..#.##...";
    "#.##..#...";
    "######.#.#";
    ".#...#.#.#";
    ".#########";
    ".###.#..#.";
    "########.#";
    "##...##.#.";
    "..###.#.#.";
    "";
    "Tile 2971:";
    "..#.#....#";
    "#...###...";
    "#.#.###...";
    "##.##..#..";
    ".#####..##";
    ".#..####.#";
    "#..#.#..#.";
    "..####.###";
    "..#.#.###.";
    "...#.#.#.#";
    "";
    "Tile 2729:";
    "...#.#.#.#";
    "####.#....";
    "..#.#.....";
    "....#..#.#";
    ".##..##.#.";
    ".#.####...";
    "####.#.#..";
    "##.####...";
    "##..#.##..";
    "#.##...##.";
    "";
    "Tile 3079:";
    "#.#.#####.";
    ".#..######";
    "..#.......";
    "######....";
    "####.#..#.";
    ".#...#.##.";
    "#.#####.##";
    "..#.###...";
    "..#.......";
    "..#.###...";
]

(*
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###
*)

let tiles = parseTiles sampleInput
let sampleTile = List.head tiles

[<Fact>]
let ``parses tile``() =
    sampleTile |> should equal {
        Id = 2311L;
        Pixels = array2D [
            ["."; "."; "#"; "#"; "."; "#"; "."; "."; "#"; "."];
            ["#"; "#"; "."; "."; "#"; "."; "."; "."; "."; "."];
            ["#"; "."; "."; "."; "#"; "#"; "."; "."; "#"; "."];
            ["#"; "#"; "#"; "#"; "."; "#"; "."; "."; "."; "#"];
            ["#"; "#"; "."; "#"; "#"; "."; "#"; "#"; "#"; "."];
            ["#"; "#"; "."; "."; "."; "#"; "."; "#"; "#"; "#"];
            ["."; "#"; "."; "#"; "."; "#"; "."; "."; "#"; "#"];
            ["."; "."; "#"; "."; "."; "."; "."; "#"; "."; "."];
            ["#"; "#"; "#"; "."; "."; "."; "#"; "."; "#"; "."];
            ["."; "."; "#"; "#"; "#"; "."; "."; "#"; "#"; "#"];
        ]
    }

[<Fact>]
let ``gets edges``() =
    let result = getEdges sampleTile

    result |> should equal (Set.ofList [
        "..##.#..#.";
        "..###..###";
        ".#####..#.";
        "...#.##..#";
        ".#..#.##..";
        "###..###..";
        ".#..#####.";
        "#..##.#...";
    ])

[<Fact>]
let ``computes part 1 solution``() =
    let result = getPart1Solution sampleInput

    result |> should equal 20899048083289L
